name: windows-builds

on:
  push:
  workflow_dispatch:

jobs:
  build_windows_msvc:
    name: Build with MSVC and Ninja
    runs-on: windows-2022

    env:
      QT_VERSION: 6.4.2
      QT_DIR: ${{ github.workspace }}\Qt

    steps:
    - name: üì¶ Checkout source code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: ‚öôÔ∏è Install Ninja build system
      run: choco install ninja --no-progress

    - name: üì• Install Qt for MSVC
      uses: jurplel/install-qt-action@v3
      with:
        version: ${{ env.QT_VERSION }}
        target: desktop
        host: windows
        arch: win64_msvc2019_64
        dir: ${{ env.QT_DIR }}
        setup-python: false

    - name: üèóÔ∏è Setup MSVC Developer Environment
      uses: TheMrMilchmann/setup-msvc-dev@v3
      with:
        arch: x64

    - name: üõ†Ô∏è Configure CMake with Ninja + MSVC
      run: |
        cmake -S . -B build -G Ninja `
          -DCMAKE_PREFIX_PATH="${{ env.QT_DIR }}\Qt\${{ env.QT_VERSION }}\msvc2019_64" `
          -DCMAKE_INSTALL_PREFIX="${{ github.workspace }}\install" `
          -DCMAKE_BUILD_TYPE=Release
      shell: powershell

    - name: üî® Build with Ninja + MSVC
      run: cmake --build build
      shell: powershell

    - name: üì¶ Install built files
      run: cmake --install build
      shell: powershell

  build_windows_mingw:
    name: Build with MinGW and CMake
    runs-on: windows-2022

    env:
      QT_VERSION: 6.8.2
      QT_DIR: ${{ github.workspace }}\Qt

    steps:
    - name: üì¶ Checkout source code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: ‚öôÔ∏è Install Ninja and MinGW toolchain
      run: |
        choco install ninja --no-progress
        choco install mingw --no-progress
      shell: powershell

    - name: ‚ûï Add MinGW to system PATH
      run: echo "C:\ProgramData\chocolatey\lib\mingw\tools\install\mingw64\bin" >> $env:GITHUB_PATH
      shell: powershell

    - name: üì• Install Qt for MinGW
      uses: jurplel/install-qt-action@v4
      with:
        aqtversion: '==3.1.19'
        version: ${{ env.QT_VERSION }}
        target: desktop
        host: windows
        arch: win64_mingw
        dir: ${{ env.QT_DIR }}
        setup-python: false

    - name: üõ†Ô∏è Configure CMake (MinGW)
      shell: powershell
      run: |
        cmake -S . -B build-mingw `
          -DCMAKE_PREFIX_PATH="${{ env.QT_DIR }}\Qt\${{ env.QT_VERSION }}\mingw_64" `
          -DCMAKE_INSTALL_PREFIX=${{ github.workspace }}\install `
          -DCMAKE_BUILD_TYPE=Release `
          -G Ninja

    - name: üî® Build with CMake (MinGW)
      shell: powershell
      run: cmake --build build-mingw

    - name: üì¶ Install built files (MinGW)
      shell: powershell
      run: cmake --install build-mingw
